-- Drop in dependency order
DROP TABLE IF EXISTS review CASCADE;
DROP TABLE IF EXISTS edit_proposal CASCADE;
DROP TABLE IF EXISTS api_call_log CASCADE;
DROP TABLE IF EXISTS user_roles CASCADE;
DROP TABLE IF EXISTS restroom CASCADE;
DROP TABLE IF EXISTS company CASCADE;
DROP TABLE IF EXISTS users CASCADE;

-- Company table
CREATE TABLE company (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- OAuth user directory
CREATE TABLE users (
    subject VARCHAR(255) PRIMARY KEY,
    email VARCHAR(255),
    display_name VARCHAR(255),
    picture_url TEXT,
    last_login_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- User roles
CREATE TABLE user_roles (
    id SERIAL PRIMARY KEY,
    subject VARCHAR(255) NOT NULL REFERENCES users(subject) ON DELETE CASCADE,
    role VARCHAR(50) NOT NULL CHECK (
        role IN ('USER', 'ADMIN', 'COMPANY')
    ),
    UNIQUE (subject, role)
);

-- Restroom metadata
CREATE TABLE restroom (
    id BIGINT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    address VARCHAR(255),
    latitude DOUBLE PRECISION NOT NULL,
    longitude DOUBLE PRECISION NOT NULL,
    company_id BIGINT REFERENCES company(id),
    hours_json JSON DEFAULT '{}',
    amenities TEXT ARRAY,
    avg_rating DOUBLE PRECISION DEFAULT 0,
    visit_count BIGINT DEFAULT 0
);

-- User reviews
CREATE TABLE review (
    id SERIAL PRIMARY KEY,
    rating INT NOT NULL CHECK (rating BETWEEN 1 AND 5),
    cleanliness INT NOT NULL CHECK (cleanliness BETWEEN 1 AND 5),
    comment TEXT,
    helpful_votes INT DEFAULT 0,
    user_id VARCHAR(255) NOT NULL REFERENCES users(subject),
    restroom_id BIGINT NOT NULL REFERENCES restroom(id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Restroom edit proposals
CREATE TABLE edit_proposal (
    id BIGINT PRIMARY KEY,
    restroom_id BIGINT NOT NULL REFERENCES restroom(id),
    proposed_name VARCHAR(255),
    proposed_address VARCHAR(255),
    proposed_hours VARCHAR(255),
    proposed_amenities TEXT,
    proposer_user_id VARCHAR(255) NOT NULL REFERENCES users(subject),
    status VARCHAR(50) NOT NULL CHECK (status IN ('PENDING', 'APPROVED', 'REJECTED')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- API call logs
CREATE TABLE api_call_log (
    id BIGSERIAL PRIMARY KEY,
    user_subject VARCHAR(255) REFERENCES users(subject) ON DELETE SET NULL,
    http_method VARCHAR(20) NOT NULL,
    requested_url TEXT NOT NULL,
    response_status INT NOT NULL,
    duration_ms BIGINT,
    logged_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
